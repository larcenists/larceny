Operating System Interface
~~~~~~~~~~~~~~~~~~~~~~~~~~

proc:command-line-arguments[args="",result="vector"]

Returns a vector of strings: the arguments supplied to the program by
the user or the operating system.

proc:dump-heap[args="filename procedure",result="unspecified"]

Dump a heap image to the named file that will start up with the
supplied procedure. Before _procedure_ is called, command line
arguments will be parsed and any init procedures registered with 
`add-init-procedure!`  will be called.

_Note: Currently, heap dumping is only available with the
stop-and-copy collector (`-stopcopy` command line option), although the
heap image can be used with all the other collectors._

proc:dump-interactive-heap[args="filename",result="unspecified"]

Dump a heap image to the named file that will start up with the
standard read-eval-print loop. Before the read-eval-print loop is
called, command line arguments will be parsed and any init procedures
registered with `add-init-procedure!`
will be called.

_Note: Currently, heap dumping is only available with the
stop-and-copy collector (`-stopcopy` command line option), although the
heap image can be used with all the other collectors._

proc:getenv[args="key",result="string or #f"]

Returns the operating system environment mapping for the string _key_,
or `#f` if there is no mapping for _key_.

[NOTE]
================================================================
This is now a synonym for the `get-environment-variable`
exported by the `(scheme process-context)` library.
================================================================

proc:setenv[args="key val",result="unspecified"]

Sets the operating system environment mapping for the string _key_
to _val_.

proc:system[args="command",result="status"]

Send the _command_ to the operating system's command processor and
return the `system` command's exit status. On Unix, _command_ is a
string and _status_ is an exact integer.

[NOTE]
================================================================
If the _command_ returns a nonzero exit status, then the exit
status returned by `system` is 256 times the exit status returned
by the _command_.
================================================================

